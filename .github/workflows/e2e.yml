name: E2E Tests

on:
  push:
    branches: [main, feat/**, ops/**]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate Prisma Client
        run: pnpm --filter @khaledaun/db run db:generate
        env:
          # Mock DATABASE_URL for Prisma generation
          DATABASE_URL: postgresql://mock:mock@localhost:5432/mock

      - name: Build site
        run: pnpm --filter @khaledaun/site build
        env:
          DATABASE_URL: postgresql://mock:mock@localhost:5432/mock
          REVALIDATE_SECRET: test-secret
          PREVIEW_SECRET: test-secret
          SITE_URL: http://localhost:3001

      - name: Build admin
        run: pnpm --filter @khaledaun/admin build
        env:
          DATABASE_URL: postgresql://mock:mock@localhost:5432/mock
          REVALIDATE_SECRET: test-secret
          PREVIEW_SECRET: test-secret
          SITE_URL: http://localhost:3001

      - name: Start site in background
        run: |
          cd apps/site
          pnpm start &
          echo $! > site.pid
        env:
          DATABASE_URL: postgresql://mock:mock@localhost:5432/mock
          REVALIDATE_SECRET: test-secret
          PREVIEW_SECRET: test-secret
          SITE_URL: http://localhost:3001

      - name: Start admin in background
        run: |
          cd apps/admin
          pnpm start &
          echo $! > admin.pid
        env:
          DATABASE_URL: postgresql://mock:mock@localhost:5432/mock
          REVALIDATE_SECRET: test-secret
          PREVIEW_SECRET: test-secret
          SITE_URL: http://localhost:3001

      - name: Wait for apps to be ready
        run: |
          timeout 60 bash -c 'until curl -f http://localhost:3001/api/health; do sleep 2; done'
          timeout 60 bash -c 'until curl -f http://localhost:3000/api/health; do sleep 2; done'

      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps chromium

      - name: Run E2E tests
        run: pnpm exec playwright test apps/tests/e2e/public-phase5*.spec.ts
        env:
          ADMIN_URL: http://localhost:3000
          NEXT_PUBLIC_SITE_URL: http://localhost:3001

      - name: Cleanup
        if: always()
        run: |
          [ -f apps/site/site.pid ] && kill $(cat apps/site/site.pid) || true
          [ -f apps/admin/admin.pid ] && kill $(cat apps/admin/admin.pid) || true

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7

