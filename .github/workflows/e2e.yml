name: E2E Tests

on:
  push:
    branches: [main, feat/**, ops/**]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate Prisma Client
        run: pnpm --filter @khaledaun/db run db:generate
        env:
          # Mock DATABASE_URL for Prisma generation
          DATABASE_URL: postgresql://mock:mock@localhost:5432/mock

      - name: Build site
        run: pnpm --filter @khaledaun/site build
        env:
          DATABASE_URL: postgresql://mock:mock@localhost:5432/mock
          REVALIDATE_SECRET: test-secret
          PREVIEW_SECRET: test-secret
          SITE_URL: http://localhost:3001

      - name: Build admin
        run: pnpm --filter @khaledaun/admin build
        env:
          DATABASE_URL: postgresql://mock:mock@localhost:5432/mock
          REVALIDATE_SECRET: test-secret
          PREVIEW_SECRET: test-secret
          SITE_URL: http://localhost:3001

      - name: Start site in background
        run: |
          cd apps/site
          PORT=3001 pnpm start > ../../site.log 2>&1 &
          echo $! > ../../site.pid
          sleep 5
        env:
          DATABASE_URL: postgresql://mock:mock@localhost:5432/mock
          REVALIDATE_SECRET: test-secret
          PREVIEW_SECRET: test-secret
          SITE_URL: http://localhost:3001
          PORT: 3001

      - name: Start admin in background
        run: |
          cd apps/admin
          PORT=3000 pnpm start > ../../admin.log 2>&1 &
          echo $! > ../../admin.pid
          sleep 5
        env:
          DATABASE_URL: postgresql://mock:mock@localhost:5432/mock
          REVALIDATE_SECRET: test-secret
          PREVIEW_SECRET: test-secret
          SITE_URL: http://localhost:3001
          PORT: 3000

      - name: Wait for apps to be ready
        run: |
          echo "Waiting for site to be ready..."
          timeout 120 bash -c 'until curl -f http://localhost:3001/api/health 2>/dev/null; do echo "Site not ready, waiting..."; sleep 3; done' || (echo "Site logs:"; cat site.log; exit 1)
          echo "Site is ready!"
          echo "Waiting for admin to be ready..."
          timeout 120 bash -c 'until curl -f http://localhost:3000/api/health 2>/dev/null; do echo "Admin not ready, waiting..."; sleep 3; done' || (echo "Admin logs:"; cat admin.log; exit 1)
          echo "Admin is ready!"

      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps chromium
        
      - name: Cache Playwright browsers
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Run E2E tests
        run: pnpm test
        env:
          ADMIN_URL: http://localhost:3000
          NEXT_PUBLIC_SITE_URL: http://localhost:3001
          REVALIDATE_SECRET: test-secret
          REQUIRE_AR_FOR_PUBLISH: "false"

      - name: Cleanup
        if: always()
        run: |
          [ -f site.pid ] && kill $(cat site.pid) || true
          [ -f admin.pid ] && kill $(cat admin.pid) || true
          
      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: app-logs
          path: |
            site.log
            admin.log
          retention-days: 7

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7

